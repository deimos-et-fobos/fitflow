version: "3.9"

services:
  backend:
    # build:
    #   context: ./backend
    #   dockerfile: Dockerfile
    build: ./backend
    image: deimosetfobos/fitflow-backend_latest
    container_name: django_backend
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn fitflow.wsgi:application --bind 0.0.0.0:8000"
            #  python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/fitflow:/app/fitflow
    # environment:
    #   POSTGRES_DB: fitflow
    #   POSTGRES_USER: postgres
    #   POSTGRES_PASSWORD: postgres
    #   POSTGRES_HOST: db
    #   POSTGRES_PORT: 5432  
    # env_file:
    #   - ./backend/fitflow/.env
    ports:
      - "8000:8000"
    # depends_on:
    #   db:
    #     condition: service_healthy

  frontend:
    # build:
    #   context: ./frontend
    #   dockerfile: Dockerfile
    build: ./frontend
    image: deimosetfobos/fitflow-frontend_latest
    container_name: frontend
    volumes:
      - ./frontend/code:/app/code
    ports:
      - "5173:5173"

#   db:
#     image: postgres:15
#     container_name: postgres_db
#     environment:
#       POSTGRES_DB: fitflow
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#     healthcheck:  # Verifica que PostgreSQL est√© listo antes de que Django inicie
#       test: ["CMD", "pg_isready", "-U", "postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

# volumes:
#   pgdata:
